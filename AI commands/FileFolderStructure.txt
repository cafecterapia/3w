my-subscription-app/
├── .env.local              # Environment variables (API keys, database URL)
├── .eslintrc.json          # ESLint configuration
├── .gitignore              # Files to ignore in Git
├── next.config.mjs         # Next.js configuration (e.g., for PWA)
├── package.json            # Project dependencies and scripts
├── postcss.config.js       # PostCSS configuration (for Tailwind)
├── tailwind.config.ts      # Tailwind CSS v4 configuration
├── tsconfig.json           # TypeScript configuration

├── prisma/
│   ├── schema.prisma       # Your database schema (models, relations)
│   └── migrations/         # Database migration history

├── public/
│   ├── icons/              # App icons for PWA (e.g., icon-192x192.png)
│   ├── images/             # Static images like logos or marketing photos
│   ├── manifest.json       # PWA manifest file
│   └── sw.js               # Service Worker for push notifications & offline capabilities

└── src/
    ├── app/
    │   ├── (auth)/           # Route group for authentication pages
    │   │   ├── login/
    │   │   │   └── page.tsx
    │   │   └── register/
    │   │       └── page.tsx
    │   │
    │   ├── (main)/           # Route group for protected, authenticated routes
    │   │   ├── layout.tsx      # Shared layout for the main app (e.g., with sidebar)
    │   │   ├── dashboard/
    │   │   │   └── page.tsx    # Main dashboard after login
    │   │   ├── billing/
    │   │   │   └── page.tsx    # Page to manage subscription, view invoices
    │   │   └── settings/
    │   │       └── page.tsx    # User account settings
    │   │
    │   ├── api/                # API Routes (Your Backend-for-Frontend - BFF)
    │   │   ├── auth/
    │   │   │   └── [...nextauth]/
    │   │   │       └── route.ts # Auth.js catch-all route
    │   │   │
    │   │   ├── payments/
    │   │   │   ├── create-subscription/
    │   │   │   │   └── route.ts # Server-side logic to create a subscription with Efi
    │   │   │   └── manage-subscription/
    │   │   │       └── route.ts # Logic to create a portal link to manage billing
    │   │   │
    │   │   ├── webhooks/
    │   │   │   └── efi/
    │   │   │       └── route.ts # Handles incoming webhooks from Efi (e.g., payment success)
    │   │   │
    │   │   └── push/
    │   │       ├── subscribe/
    │   │       │   └── route.ts # Logic to save a user's push subscription
    │   │       └── send-notification/
    │   │           └── route.ts # Secure endpoint to trigger a push notification
    │   │
    │   ├── favicon.ico       # Application favicon
    │   ├── globals.css       # Global styles for Tailwind CSS
    │   ├── layout.tsx        # Root layout of the entire application
    │   └── page.tsx          # Your public landing/home page
    │
    ├── components/
    │   ├── ui/               # Reusable, generic UI components (Button, Card, Input, etc.)
    │   │   ├── button.tsx
    │   │   └── card.tsx
    │   │
    │   ├── features/         # Components for specific features
    │   │   ├── billing-portal.tsx
    │   │   ├── pricing-table.tsx
    │   │   └── subscription-status.tsx
    │   │
    │   └── layout/           # Major layout components
    │       ├── header.tsx
    │       ├── footer.tsx
    │       └── sidebar.tsx
    │
    ├── hooks/
    │   ├── use-subscription.ts # Custom hook to get current user's subscription status
    │   └── use-push-manager.ts # Custom hook to manage PWA push notification logic
    │
    ├── lib/
    │   ├── auth.ts           # Auth.js configuration and options
    │   ├── prisma.ts         # Prisma client instance (singleton for performance)
    │   ├── efi.ts            # Efi SDK initialization and helper functions
    │   └── utils.ts          # Utility functions (e.g., formatting dates, currency)
    │
    └── types/
        └── index.ts          # Global TypeScript types (e.g., for subscription plans)